#include<iostream>
using namespace std;
#include <stdlib.h>
class Node
{
	int iNum;
	int i;
public:
	Node *pNext;
	Node(int x=0,int in=0):iNum(x),i(in){pNext=NULL;}
	int getNum(){return iNum;}
	int getI(){return i;}
};

class List
{
protected:
	int count;
	Node* pHead;
	Node* pTail;
public:
	List(){pHead=pTail=NULL;count=0;}
	List(Node &p){
		pHead=pTail=&p;count=1;}
	List(List &p){
		pHead=p.getHead();
		pTail=p.getTail();
		count=p.getCount();
	}
	Node* getHead(){return pHead;}
	Node* getTail(){return pTail;}
	int getCount(){return count;}
	void add(Node& p);
	void add(int num,int i);
	void show();
	void insert(Node& p,int x);            //插入第x个节点之后
	void cancle(int x);                    //删除第x个节点
	int find(int x);                     //查找元素x
};

int List::find(int x)
{
	Node* he=pHead;
	while(he!=NULL)
	{
		if(he->getNum()==x)
			return he->getI();
		he=he->pNext;
	}
	return -1;
}

void List::add(int num,int i)
{
	if(pHead==NULL)
		pTail=pHead=new Node(num,i);
	else
	{
		pTail->pNext=new Node(num,i);
		pTail=pTail->pNext;
	}
}


void List::insert(Node &p,int x)             //插入第x个节点之后
{
	int i;
	Node* back=pHead;
	Node* front=pHead;

	if(x>count||x<0)
		exit(0);
	if(x==0)
	{
		p.pNext=pHead;
		pHead=&p;
		exit(0);
	}
	for(i=0;i<x;i++)
		back=back->pNext;
	for(i=0;i<x-1;i++)
		front=front->pNext;
	front->pNext=&p;
	p.pNext=back;
	count++;
}

void List::cancle(int x)               //删除第x个节点
{
	int i;
	Node* back=pHead;
	Node* front=pHead;

	if(x>count||x<0)
		exit(0);
	if(x==0)
	{
		pHead=pHead->pNext;
		exit(0);
	}
	for(i=0;i<x;i++)
		back=back->pNext;
	for(i=1;i<x-1;i++)
		front=front->pNext;
	front->pNext=back;
	count--;
}

void List::add(Node& p)        //添加节点
{
	if(pHead==NULL)
		pHead=&p;
	else
		pTail->pNext=&p;
	pTail=&p;
	count++;
}
void List::show()                //输出链表
{
	Node* p=pHead;
	for(int i=1;p!=NULL;i++)
	{
		cout<<i<<"  :  "<<p->getNum()<<endl;
		p=p->pNext;
	}

}



//////////////////////////////////////链表////////////////////////////////////////////////////////////////

int Hash(int num)
{
	return num%7;
}
int scearch(List* b,int x)
{
	int n=Hash(x);
	return b[n].find(x);
}

void build(int* a,int num,List* bud)
{
	for(int i=0;i<num;i++)
		bud[Hash(a[i])].add(a[i],i);
}

int main()
{
	int a[6]={31,14,3,9,21,67};
	int x,i;
	List bud[6];
	build(a,6,bud);
	for(int i=0;i<6;i++)
		cout<<a[i]<<ends;

	while(1)
	{
		cout<<endl<<"请输入查找元素 ："<<endl;
		cin>>x;
		i=scearch(bud,x);
		if(i==-1)
			cout<<"记录中无此元素"<<endl;
		else
			cout<<"记录表中有此元素 "<<a[i]<<"  其下标为 ："<<i<<endl;
	}

	system("pause");
	return 0;

}
